{"version":3,"sources":["components/app/styles.ts","components/file-upload/styles.ts","components/app/context.tsx","components/file-upload/index.tsx","components/image-container/styles.ts","components/added-label/styles.ts","components/added-label/index.tsx","components/image-container/index.tsx","components/clear-button/styles.ts","components/clear-button/index.tsx","components/app/index.tsx","index.tsx"],"names":["useAppStyles","makeSharedStyles","theme","root","height","display","flexDirection","fontFamily","action","clearButton","width","marginLeft","spacing","applicationWrapper","padding","maxHeight","useUploadButtonStyles","marginBottom","ImageContext","createContext","setImage","image","useImageContext","React","useContext","ImageProvider","children","useState","uploadedImage","setUploadedImage","Provider","value","FileUpload","classes","Button","variant","color","component","type","hidden","onChange","e","file","target","files","length","URL","createObjectURL","useImageContainerStyles","border","borderRadius","background","consistImage","empty","flexGrow","alignItems","justifyContent","fontSize","useAddedLabelStyles","position","backgroundColor","top","props","clientY","left","clientX","editable","marginTop","marginRight","AddedLabel","config","onRemove","onSave","isEdit","setIsEdit","labelText","setLabelText","stopPropagation","event","className","TextField","autoFocus","onBlur","onClick","ImageContainer","labelsList","setLabelsList","onResize","useCallback","window","innerHeight","innerWidth","updatedDimensionsArray","map","item","previousWindowWidth","previousWindowHeight","onRemoveLabel","updatedList","slice","useEffect","addEventListener","removeEventListener","findIndex","isEditing","prevState","src","alt","index","newList","useClearButtonStyles","ClearButton","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.692ae293.chunk.js","sourcesContent":["import makeSharedStyles from \"@material-ui/core/styles/makeStyles\";\n\nexport const useAppStyles = makeSharedStyles(theme => ({\n    root: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        fontFamily: \"Roboto\",\n    },\n    action: {\n        display: \"flex\",\n    },\n    clearButton: {\n        width: \"360px\",\n        height: \"36px\",\n        marginLeft: theme.spacing(2),\n    },\n    applicationWrapper: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(2),\n        maxHeight: `calc(100vh - ${2 * theme.spacing(2)}px)`,\n    }\n}));\n","import makeSharedStyles from \"@material-ui/core/styles/makeStyles\";\n\nexport const useUploadButtonStyles = makeSharedStyles(theme => ({\n    root: {\n        width: \"360px\",\n        height: \"36px\",\n        marginBottom: theme.spacing(2)\n    }\n}));\n","import React, {createContext, useState} from \"react\";\n\ninterface ImageProviderProps {\n    children: React.ReactNode;\n}\n\ninterface ImageContextProps {\n    setImage: (image: string) => void;\n    image: string;\n}\n\nconst ImageContext = createContext<ImageContextProps>({\n    setImage: () => null,\n    image: \"\"\n});\n\nexport const useImageContext = (): ImageContextProps => React.useContext(ImageContext);\n\nconst ImageProvider = ({ children }: ImageProviderProps): JSX.Element => {\n    const [uploadedImage, setUploadedImage] = useState(\"\");\n\n    return (\n        <ImageContext.Provider value={{ setImage: setUploadedImage, image: uploadedImage}}>\n            {children}\n        </ImageContext.Provider>\n    );\n}\n\nexport default ImageProvider;\n","import React, {ChangeEvent} from 'react';\nimport {Button} from \"@material-ui/core\";\nimport {useUploadButtonStyles} from \"components/file-upload/styles\";\nimport {useImageContext} from \"components/app/context\";\n\nconst FileUpload = (): JSX.Element => {\n    const classes = useUploadButtonStyles();\n\n    const { setImage } = useImageContext();\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.length ? e.target.files[0] : null;\n        if (file) {\n            setImage(URL.createObjectURL(file));\n        }\n    }\n\n    return (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            classes={{ ...classes }}\n            component=\"label\"\n        >\n            Upload Image\n            <input type=\"file\" hidden onChange={handleChange}/>\n        </Button>\n    );\n}\n\nexport default FileUpload;\n","import makeSharedStyles from \"@material-ui/core/styles/makeStyles\";\n\nexport const useImageContainerStyles = makeSharedStyles(theme => ({\n    root: {\n        border: \"1px solid #cecece\",\n        borderRadius: \"5px\",\n        background: \"linear-gradient(90deg, rgba(176,176,176,1) 0%, rgba(214,214,214,1) 23%, rgba(233,233,233,1) 48%, rgba(232,251,255,1) 100%)\",\n        \"& img\": {\n            width: \"100%\",\n            height: \"100%\",\n        }\n    },\n    consistImage: {\n        maxHeight: `calc(100vh - ${36 + theme.spacing(2) + 2 * theme.spacing(2)}px)` ,\n        height: \"100%\",\n    },\n    empty: {\n        flexGrow: 1,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        \"& span\": {\n            color: \"#a0a0a0\",\n            fontSize: \"30px\",\n        }\n    },\n}));\n","import makeSharedStyles from \"@material-ui/core/styles/makeStyles\";\nimport {AddedLabelObject} from \"components/image-container\";\n\nexport const useAddedLabelStyles = makeSharedStyles(theme => ({\n    root: {\n        position: \"fixed\",\n        borderRadius: \"5px\",\n        backgroundColor: \"#6767676e\",\n        top: (props: AddedLabelObject) => props.clientY,\n        left: (props: AddedLabelObject) => props.clientX,\n        padding: theme.spacing(),\n    },\n    editable: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        \"& .actions\": {\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: theme.spacing(),\n            \"& .save-button\": {\n                marginRight: theme.spacing()\n            }\n        },\n    }\n}));\n","import React, {useState} from \"react\";\nimport {useAddedLabelStyles} from \"components/added-label/styles\";\nimport {AddedLabelObject} from \"components/image-container\";\nimport {Button, TextField} from \"@material-ui/core\";\n\ninterface Props {\n    config: AddedLabelObject;\n    onRemove: () => void;\n    onSave: () => void;\n}\n\nconst AddedLabel = ({ config, onRemove, onSave }: Props): JSX.Element => {\n    const classes = useAddedLabelStyles(config);\n\n    const [isEdit, setIsEdit] = useState(true);\n    const [labelText, setLabelText] = useState<string>(\"\");\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setLabelText(event.target.value);\n    };\n    const onSaveClick = (event: React.MouseEvent): void => {\n        event.stopPropagation();\n        setIsEdit(false);\n        onSave();\n    }\n    const onClear = (event: React.MouseEvent): void => {\n        event.stopPropagation();\n        onRemove();\n    }\n    const stopPropagation = (event: any): void => {\n        event.stopPropagation();\n    }\n\n\n\n    return (\n        <div className={classes.root}>\n            {isEdit ? (\n                <div className={classes.editable}>\n                    <TextField\n                        autoFocus\n                        onChange={onChange}\n                        onBlur={stopPropagation}\n                        onClick={stopPropagation}\n                    />\n                    <div className=\"actions\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"save-button\"\n                            onClick={onSaveClick}\n                        >Save</Button>\n                        <Button variant=\"contained\" onClick={onClear} >Cancel</Button>\n                    </div>\n                </div>\n            ) :\n                <span>{labelText}</span>\n            }\n        </div>\n    );\n}\n\nexport default AddedLabel;\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useImageContainerStyles} from \"components/image-container/styles\";\nimport {useImageContext} from \"components/app/context\";\nimport AddedLabel from \"components/added-label\";\n\nexport interface AddedLabelObject {\n    clientX: number;\n    clientY: number;\n    isEditing: boolean;\n    previousWindowHeight: number;\n    previousWindowWidth: number;\n}\n\nconst ImageContainer = (): JSX.Element => {\n    const classes = useImageContainerStyles();\n    const { image } = useImageContext();\n\n    const [labelsList, setLabelsList] = useState<AddedLabelObject[]>([]);\n\n    const onResize = useCallback(() => {\n        const { innerHeight, innerWidth } = window;\n        const updatedDimensionsArray = labelsList.map((item) => ({\n            ...item,\n            clientX: innerWidth * (item.clientX / item.previousWindowWidth),\n            clientY: innerHeight * (item.clientY / item.previousWindowHeight),\n            previousWindowHeight: innerHeight,\n            previousWindowWidth: innerWidth\n        }));\n        setLabelsList(updatedDimensionsArray);\n    }, [labelsList]);\n    const onClick = (e: React.MouseEvent): void => {\n        if (!image || labelsList.findIndex(item => item.isEditing) !== -1) {\n            return;\n        }\n        const { clientX, clientY } = e;\n        setLabelsList(prevState => [...prevState,\n            {\n                clientX: clientX,\n                clientY: clientY,\n                isEditing: true,\n                previousWindowHeight: window.innerHeight,\n                previousWindowWidth: window.innerWidth,\n            }])\n    }\n    const onRemoveLabel = (): void => {\n        const updatedList = labelsList.slice(0, labelsList.length - 1);\n        setLabelsList(updatedList);\n    }\n    const onSave = (index: number): void => {\n        const newList = labelsList.slice();\n        newList[index].isEditing = false;\n        setLabelsList(newList);\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return function () {\n            window.removeEventListener('resize', onResize);\n        }\n    }, [onResize]);\n\n    useEffect(() => {\n        if (!image && labelsList.length > 0) {\n            setLabelsList([]);\n        }\n    }, [labelsList.length, image]);\n\n    return (\n        <div\n            className={`${classes.root} ${image ? classes.consistImage : classes.empty}`}\n            onClick={onClick}\n        >\n            {image\n                ? <img src={image} alt=\"\" />\n                : <span>There is nothing yet. Click \"Upload Image\" to continue</span>}\n            {labelsList.length > 0 && labelsList.map((item, index) =>\n                <AddedLabel\n                    key={index}\n                    config={item}\n                    onRemove={onRemoveLabel}\n                    onSave={() => onSave(index)}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default ImageContainer;\n","import makeSharedStyles from \"@material-ui/core/styles/makeStyles\";\n\nexport const useClearButtonStyles = makeSharedStyles(theme => ({\n    root: {\n        width: \"360px\",\n        height: \"36px\",\n        marginLeft: theme.spacing(2),\n    },\n}))\n","import React from \"react\";\nimport {useClearButtonStyles} from \"components/clear-button/styles\";\nimport {Button} from \"@material-ui/core\";\nimport {useImageContext} from \"components/app/context\";\n\nconst ClearButton = (): JSX.Element => {\n    const classes = useClearButtonStyles();\n    const { image, setImage } =useImageContext();\n\n    const onClick = (): void => {\n        setImage(\"\");\n    }\n\n    return image ? (\n        <Button\n            variant=\"contained\"\n            classes={{ ...classes }}\n            onClick={onClick}\n        >Clear all</Button>) : <></>\n}\n\nexport default ClearButton;\n","import React from 'react';\nimport {useAppStyles} from \"components/app/styles\";\nimport FileUpload from \"components/file-upload\";\nimport ImageProvider from \"components/app/context\";\nimport ImageContainer from \"components/image-container\";\nimport ClearButton from \"components/clear-button\";\n\nconst App = (): JSX.Element => {\n  const classes = useAppStyles();\n\n  return (\n      <div className={classes.root}>\n          <div className={classes.applicationWrapper}>\n              <ImageProvider>\n                  <div className={classes.action}>\n                      <FileUpload />\n                      <ClearButton />\n                  </div>\n                  <ImageContainer />\n              </ImageProvider>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}